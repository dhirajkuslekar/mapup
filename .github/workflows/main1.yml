---
name: Build and Push Pythonapp
on:
  push:
    branches: [ main ]
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Automatic Tagging of Releases
      id: increment-git-tag
      run: |
        bash ./build/git-update.sh -v major

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mapupp
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Install Trivy
      run: |
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin    
    
    - name: Scan Docker Image for Vulnerabilities
      id: scan-vulnerabilities
      run: |
        trivy $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG > trivy_scan_result.txt
        scan_exit_code=$?
      
        if [ $scan_exit_code -eq 0 ]; then
          echo "No vulnerabilities found."
        elif [ $scan_exit_code -eq 1 ]; then
          echo "Vulnerabilities found."
        else
          echo "Trivy encountered an error."
        fi
      
        exit $scan_exit_code
      continue-on-error: true

    - name: Send Email Notification on Failure
      if: ${{ steps.scan-vulnerabilities.outcome == 'failure' }}
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: mapup941@gmail.com
          to: mapup941@gmail.com
          subject: 'Docker Image Upload Failed'
          body: |
            Docker image upload failed for tag: ${{ steps.increment-git-tag.outputs.git-tag }}
          

    - name: Send Email Notification on Success
      if: ${{ steps.scan-vulnerabilities.outcome == 'success' }}
      uses: dawidd6/action-send-mail@v3
      with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: mapup941@gmail.com
          to: mapup941@gmail.com
          subject: 'Docker Image Upload Failed'
          body: |
            Docker image upload failed for tag: ${{ steps.increment-git-tag.outputs.git-tag }}
       